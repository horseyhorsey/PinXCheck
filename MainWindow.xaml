<Controls:MetroWindow x:Class="PinballXManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:PinballXManager"
        xmlns:System="clr-namespace:System;assembly=mscorlib"                                   
        xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        xmlns:ExtendedToolKit="http://schemas.xceed.com/wpf/xaml/toolkit"
        Title="PinXCheck" Height="789.5" Width="1088.5" Background="#FF9EA49C" BorderThickness="1" Loaded="MetroWindow_Loaded">


    <Window.Resources>
        <CollectionViewSource x:Key="ItemCollectionViewSource" CollectionViewType="ListCollectionView" Filter="itemCollectionViewSource_Filter"/>
        <CollectionViewSource x:Key="ItemCollectionViewSourceTableFiles" CollectionViewType="ListCollectionView" Filter="itemCollectionViewSource_Filter"/>
        <CollectionViewSource x:Key="ExecutableViewSource" CollectionViewType="ListCollectionView"/>
        <CollectionViewSource x:Key="MasterViewSource" CollectionViewType="ListCollectionView" Filter="itemCollectionViewSource_Filter"/>
        <CollectionViewSource x:Key="ItemCollectionViewSourceWheelFiles" CollectionViewType="ListCollectionView"/>
        <CollectionViewSource x:Key="ItemCollectionViewSourceBGIMGFiles" CollectionViewType="ListCollectionView"/>
        <CollectionViewSource x:Key="ItemCollectionViewSourceTableVids" CollectionViewType="ListCollectionView"/>

        <ObjectDataProvider x:Key="EnumDataProvider" 
                        MethodName="GetValues" 
                        ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:PinXSystemTypes"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="45*"/>
            <RowDefinition Height="91*"/>
            <RowDefinition Height="617*"/>
            <RowDefinition Height="4*"/>
        </Grid.RowDefinitions>

        <TabControl Margin="10,4,10,0" Grid.Row="1" Grid.RowSpan="2">
            <TabItem x:Name="tab1" Header="Tables">
                <Grid x:Name="GridTab1" Background="#FF566974" Margin="0,-2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="331*"/>
                        <RowDefinition Height="309*"/>
                        <RowDefinition Height="23*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="362*"/>
                        <ColumnDefinition Width="421*"/>
                        <ColumnDefinition Width="269*"/>
                    </Grid.ColumnDefinitions>
                    <DataGrid x:Name="tables_grid" CanUserAddRows="false" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" AutoGenerateColumns="False" SelectionChanged="tables_grid_SelectionChanged" CanUserReorderColumns="False" CanUserResizeColumns="True" CanUserResizeRows="False" CanUserSortColumns="True" Background="#FF7C7C7C" Grid.ColumnSpan="3" CellEditEnding="tables_grid_CellEditEnding" RowEditEnding="tables_grid_RowEditEnding" Margin="0,1,0,4" MouseRightButtonUp="tables_grid_MouseUp">
                        <DataGrid.ContextMenu>
                            <ContextMenu x:Name="tablesContext">
                                <MenuItem Header="Play table" Click="MenuItem_Click" ></MenuItem>
                                <MenuItem Header="Launch editor" x:Name="LEditor" Click="MenuItem_Click" Visibility="Hidden"></MenuItem>
                                <MenuItem Header="Camera Mode" x:Name="CamMode" Visibility="Hidden">
                                    <MenuItem Header="Load Camera" x:Name="LoadCam" ToolTip="Launch to camera mode" Click="MenuItem_Click"></MenuItem>
                                    <MenuItem Header="Cam Setup" x:Name="CamSetup" ToolTip="Reset table view to suggested Layout Guidline with no slope" Click="MenuItem_Click"></MenuItem>
                                </MenuItem>
                                <MenuItem Header="Launch to script" x:Name="LScript" Click="MenuItem_Click" Visibility="Hidden"></MenuItem>
                                <MenuItem Header="Basic Script" x:Name="LBScript" Visibility="Hidden" ToolTip="Load script %tablename%_Basic.vbs">
                                    <MenuItem Header="Play Bsc Script" x:Name="playBasic" ToolTip="Load bsc script and play" Click="MenuItem_Click"></MenuItem>
                                    <MenuItem Header="Edit Bsc Script" x:Name="editBasic" ToolTip="Load bsc script to editor" Click="MenuItem_Click"></MenuItem>
                                </MenuItem>
                                <MenuItem Header="Full Script" x:Name="LFScript" Visibility="Hidden" ToolTip="Load script %tablename%_Full.vbs">
                                    <MenuItem Header="Play Full Script" x:Name="playFull" ToolTip="Load bsc script and play" Click="MenuItem_Click"></MenuItem>
                                    <MenuItem Header="Edit Full Script" x:Name="editFull" ToolTip="Load bsc script to editor" Click="MenuItem_Click"></MenuItem>
                                </MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTemplateColumn Header="Del" Width="50">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content=" X " Background="#26DC143C" Click="Button_Click_5"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Have" Binding="{Binding TableFileExists}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TableFileExists}" Value="True">
                                                <Setter Property="Background" Value="Green"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TableFileExists}" Value="False">
                                                <Setter Property="Background" Value="Crimson"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Table File" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged}" SortDirection="Ascending" Visibility="Visible">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding TableFileExists}" 
                        						Value="True">
                                                <Setter Property="Background" Value="#263DDE36"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding TableFileExists}" 
                        						Value="False">
                                                <Setter Property="Background" Value="#26FF5454"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Edit" Width="20">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content=" X " />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description, UpdateSourceTrigger=PropertyChanged}">
                                <DataGridTextColumn.CellStyle>
                                    <Style TargetType="{x:Type DataGridCell}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding MatchedDescription, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                <Setter Property="Background" Value="#263DDE36"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding MatchedDescription, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                <Setter Property="Background" Value="#26FF5454"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGridTextColumn.CellStyle>
                            </DataGridTextColumn>
                            <DataGridTemplateColumn Header="Edit" Width="20">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content=" X " Click="Button_Click_20" ToolTip="Find new description"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Rom" Binding="{Binding Rom}"/>
                            <DataGridTextColumn Header="Manufacturer" Binding="{Binding Manufacturer}"/>
                            <DataGridTextColumn Header="Year" Binding="{Binding Year}"/>
                            <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                            <DataGridCheckBoxColumn Header="HideDmd" Binding="{Binding Hidedmd}"/>
                            <DataGridCheckBoxColumn Header="HideBackglass" Binding="{Binding Hidebackglass}"/>
                            <DataGridCheckBoxColumn Header="Enabled" x:Name="grid_enabled" Binding="{Binding Enabled}"/>
                            <DataGridTextColumn Header="Rating" Binding="{Binding Rating}"/>
                            <DataGridTextColumn Header="Executable" Binding="{Binding AlternateExe}"/>
                            <DataGridTextColumn Header="Author" Binding="{Binding Author}"/>
                            <DataGridCheckBoxColumn Header="Desktop" x:Name="desktop" Binding="{Binding Desktop,UpdateSourceTrigger=PropertyChanged}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="buttonAddFile" Content="Add File" HorizontalAlignment="Left" Margin="6,77,0,0" Width="53" Grid.Row="1" Click="buttonAddFile_Click" Height="26" VerticalAlignment="Top" ToolTip="Add table file below into database"/>
                    <Button x:Name="button_addgame_Copy1" Content="Add All" HorizontalAlignment="Left" Margin="122,77,0,0" Width="55" Height="25" VerticalAlignment="Top" Click="button_addgame_Copy1_Click" Grid.Row="1"/>
                    <Image x:Name="media_wheel" Source="{Binding wheel_image}" Margin="10,52,10,16" Grid.Column="2" Stretch="Fill" Grid.Row="1" Grid.RowSpan="2" />
                    <DataGrid x:Name="datagrid_oddtables" DataContext="{StaticResource ItemCollectionViewSourceTableFiles}" ItemsSource="{Binding}" Margin="6,109,16,10" Grid.Row="1" IsReadOnly="True" Grid.RowSpan="2" />
                    <Image x:Name="media_company" Source="{Binding wheel_image}" Stretch="Fill" Margin="0,0,10,16" HorizontalAlignment="Right" Width="193" Height="101" VerticalAlignment="Bottom" Grid.Column="2" Grid.Row="1" Grid.RowSpan="2" />
                    <ComboBox x:Name="combobox_exe" HorizontalAlignment="Left" Margin="73,45,0,0" Width="124" Height="26" VerticalAlignment="Top" ToolTip="Set executable for table" Grid.Row="1"/>
                    <Button x:Name="apply_exe" Content="Apply" HorizontalAlignment="Left" Margin="202,45,0,0" Width="52" Click="apply_exe_Click" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                    <Button x:Name="apply_exe_Copy" Content="All" HorizontalAlignment="Left" Margin="260,45,0,0" Width="43" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                    <Button x:Name="button_addgame_Copy3" Content="Replace" HorizontalAlignment="Left" Margin="64,77,0,0" Width="53" Height="26" VerticalAlignment="Top" Grid.Row="1" Click="button_addgame_Copy3_Click" ToolTip="Replace selected table file with selected table in list"/>
                    <GridSplitter ResizeDirection="Rows" Margin="0,1,0,0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Grid.Row="1" Height="3" VerticalAlignment="Top"/>
                    <GridSplitter Grid.Column="2" HorizontalAlignment="Left" Grid.Row="1" VerticalAlignment="Stretch" Width="3" Margin="0,45,0,10" Grid.RowSpan="2"/>
                    <Button Content="On" Margin="186,9,0,0" VerticalAlignment="Top" Click="Button_Click_6" Height="25" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Width="33" ToolTip="Switch On all selected tables"/>
                    <CheckBox x:Name="check_game_enabled" Content="Enabled" HorizontalAlignment="Left" Margin="182,82,0,0" Grid.Row="1" VerticalAlignment="Top" IsChecked="True" Height="18" Width="66"/>
                    <CheckBox x:Name="check_dmd" Content="Dmd" HorizontalAlignment="Left" Margin="253,82,0,0" Grid.Row="1" VerticalAlignment="Top" IsChecked="True" Height="18" Width="50"/>
                    <CheckBox x:Name="check_bg" Content="BG" HorizontalAlignment="Left" Margin="312,82,0,0" Grid.Row="1" VerticalAlignment="Top" IsChecked="True" Height="18" Width="39"/>
                    <Label Content="Executable" HorizontalAlignment="Left" Margin="6,45,0,0" Width="67" Height="26" VerticalAlignment="Top" Grid.Row="1"/>
                    <RadioButton x:Name="radioGroup1" Content="Enabled" Margin="10,12,0,0" Grid.Row="1" VerticalAlignment="Top" IsChecked="True" Height="18" HorizontalAlignment="Left" Width="66" Grid.Column="2"/>
                    <RadioButton x:Name="radioGroup2" Content="Dmd" Margin="82,12,0,0" Grid.Row="1" VerticalAlignment="Top" Height="18" HorizontalAlignment="Left" Width="50" Grid.Column="2"/>
                    <RadioButton x:Name="radioGroup3" Content="BG" Margin="137,12,0,0" Grid.Row="1" VerticalAlignment="Top" Height="18" Checked="radioGroup3_Checked" HorizontalAlignment="Left" Width="39" Grid.Column="2"/>
                    <Button Content="Off" Margin="224,9,0,0" VerticalAlignment="Top" Height="25" Click="Button_Click_7" Grid.Row="1" Grid.Column="2" HorizontalAlignment="Left" Width="33" ToolTip="Switch Off all selected tables"/>
                    <Button Content="Author" Margin="57,9,0,0" Click="Button_Click_8" ToolTip="Get selected tables author" HorizontalAlignment="Left" Width="60" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                    <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" Margin="0,45,4,10" Width="2" Grid.RowSpan="2"/>
                    <DataGrid x:Name="dataGridMedia" CanUserAddRows="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" AutoGenerateColumns="False" Margin="2,126,0,11" Grid.Row="1" SelectionChanged="dataGridMedia_SelectionChanged" Grid.Column="1" Grid.RowSpan="2">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn x:Name="renameCheckBox" Header="Rename" Binding="{Binding FlagRename}"/>
                            <DataGridTextColumn Header="Table" Binding="{Binding Description}"/>
                            <DataGridTextColumn Header="Matched" Binding="{Binding MatchedDescription}"/>
                            <DataGridTextColumn x:Name="recommended" Header="Recommended" Binding="{Binding MatchedName}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Content="Stop" HorizontalAlignment="Left" Margin="305,96,0,0" VerticalAlignment="Top" Width="55" Height="25" Grid.Column="1" Grid.Row="1" Click="Button_Click_19"/>
                    <Button x:Name="buttonRunMatch" Content="Match" HorizontalAlignment="Left" Margin="246,96,0,0" VerticalAlignment="Top" Width="54" Height="25" Click="Button_Click_18" Grid.Column="1" Grid.Row="1"/>
                    <Controls:MetroProgressBar x:Name="progressBar1" Height="6" VerticalAlignment="Bottom" Grid.Row="2" Grid.ColumnSpan="3"/>
                    <CheckBox x:Name="filterCheckbox" Content="Filter unmatched" Grid.Column="1" HorizontalAlignment="Left" Margin="2,12,0,0" Grid.Row="1" VerticalAlignment="Top" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" Height="18" Width="117" ToolTip="Only show unmatched descriptions"/>
                    <DataGrid x:Name="lv" AutoGenerateColumns="False" DataContext="{StaticResource MasterViewSource}" ItemsSource="{Binding}" Margin="0,1,0,4" Grid.ColumnSpan="3" Visibility="Hidden" Foreground="#FFE61818" BorderBrush="#FFDC3333" IsReadOnly="True" MouseDoubleClick="lv_MouseDoubleClick" >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="" Width="400"/>
                            <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button x:Name="closeDescSearch" Content="X" Grid.Column="1" Margin="221,0,0,0" VerticalAlignment="Top" Height="25" Click="closeDescSearch_Click" HorizontalAlignment="Left" Width="20" Visibility="Collapsed"/>
                    <Button x:Name="buttonRename" Content="Rename" Grid.Column="1" Margin="365,96,0,0" Grid.Row="1" VerticalAlignment="Top" Click="buttonRename_Click" IsEnabled="False" Height="25" HorizontalAlignment="Left" Width="51"/>
                    <Button Content="Rating" Margin="122,9,0,0" Click="Button_Click_23" ToolTip="Get selected tables ratings from IPDB" Height="25" VerticalAlignment="Top" HorizontalAlignment="Left" Width="50" Grid.Row="1"/>
                    <Button Content="Rom" Margin="6,9,0,0" Click="Button_Click_24" ToolTip="Get selected tables Romname (VP Only)" HorizontalAlignment="Left" Width="45" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                    <Grid Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="76,44,0,0" Grid.Row="1" VerticalAlignment="Top" Width="125">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="143*"/>
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="radioTable" Content="Table" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="90" Grid.Column="1" IsChecked="True"/>
                        <RadioButton x:Name="radioDesc" Content="Desc" HorizontalAlignment="Left" Margin="61,0,-7,0" VerticalAlignment="Top" Height="18" Width="68" IsChecked="True" Grid.Column="1"/>
                    </Grid>
                    <ExtendedToolKit:IntegerUpDown x:Name="YearMatch" HorizontalAlignment="Left" Margin="131,96,0,0" Width="55" Value="1978" Grid.Column="1" Grid.Row="1" Height="25" VerticalAlignment="Top" Foreground="White"/>
                    <GridSplitter ResizeDirection="Rows" Margin="0,37,0,0" Grid.ColumnSpan="3" HorizontalAlignment="Stretch" Grid.Row="1" Height="3" VerticalAlignment="Top"/>
                    <Grid Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="8,99,0,0" Grid.Row="1" VerticalAlignment="Top" Width="146">
                        <RadioButton x:Name="yearLess" Content="Less" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="90"/>
                        <RadioButton x:Name="yearGreat" Content="Greater" HorizontalAlignment="Left" Margin="52,0,0,0" VerticalAlignment="Top" Height="18" Width="68" IsChecked="True"/>
                    </Grid>
                    <Label Content="TableMatch" HorizontalAlignment="Left" Margin="1,41,0,0" Grid.Row="1" VerticalAlignment="Top" Height="26" Width="71" Grid.Column="1"/>
                    <Grid Grid.Column="1" HorizontalAlignment="Left" Height="23" Margin="76,67,0,0" Grid.Row="1" VerticalAlignment="Top" Width="125">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="3*"/>
                            <ColumnDefinition Width="143*"/>
                        </Grid.ColumnDefinitions>
                        <RadioButton x:Name="radioTable2" Content="Name" HorizontalAlignment="Left" VerticalAlignment="Top" Height="18" Width="90" Grid.Column="1" IsChecked="True"/>
                        <RadioButton x:Name="radioDesc2" Content="Desc" HorizontalAlignment="Left" Margin="61,0,-7,0" VerticalAlignment="Top" Height="18" Width="68" IsChecked="True" Grid.Column="1"/>
                    </Grid>
                    <Label Content="MasterMatch" HorizontalAlignment="Left" Margin="358,64,0,0" Grid.Row="1" VerticalAlignment="Top" Height="26" Width="80" Grid.ColumnSpan="2"/>
                    <ExtendedToolKit:IntegerUpDown x:Name="MatchDistance" HorizontalAlignment="Left" Margin="195,96,0,0" Width="46" Value="8" Grid.Column="1" Grid.Row="1" Height="25" VerticalAlignment="Top" Foreground="White" ToolTip="Matching distance, less more precise"/>
                    <CheckBox x:Name="regexTableName" Content="Remove (*)" HorizontalAlignment="Left" Margin="206,45,0,0" Grid.Row="1" VerticalAlignment="Top" IsChecked="True" Height="18" Width="85" Grid.Column="1" ToolTip="Removes everything in ( ) from tables name for search"/>
                </Grid>
            </TabItem>
            <TabItem x:Name="tab2" Header="Media">
                <Grid Background="#FF25322C">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <TabControl SelectionChanged="Tab_Changed">
                        <TabItem Header="Sys Media">
                            <Grid Background="#FF25322C">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="503*"/>
                                    <ColumnDefinition Width="543*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="174*"/>
                                    <RowDefinition Height="133*"/>
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="DataGridMedia" CanUserAddRows="False" AutoGenerateColumns="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" Margin="0,42,-6,3" IsReadOnly="True" SelectedCellsChanged="DataGridMedia_SelectedCellsChanged" SelectionChanged="DataGridMedia_SelectionChanged_1" MouseDown="DataGridMedia_MouseDown" CurrentCellChanged="DataGridMedia_CurrentCellChanged" MouseUp="DataGridMedia_MouseUp" Grid.ColumnSpan="2" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding MatchedDescription, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding MatchedDescription, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Wheels" Binding="{Binding HaveWheels}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveWheels, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveWheels, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Table Image" Binding="{Binding HaveTableImage}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTableImage, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTableImage, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Table Vids" Binding="{Binding HaveTableVideo}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTableVideo, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTableVideo, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Table Image DT" Binding="{Binding HaveTableImageDT}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTableImageDT, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTableImageDT, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Table Vids DT" Binding="{Binding HaveTableVideoDT}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTableVideoDT, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTableVideoDT, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="BG Image" Binding="{Binding HaveBGImage}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveBGImage, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveBGImage, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="BG Vids" Binding="{Binding HaveBGVids}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveBGVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveBGVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Table Audio" Binding="{Binding HaveTableAudio}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTableAudio, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTableAudio, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="DMD Image" Binding="{Binding HaveDmdImg}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveDmdImg, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveDmdImg, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="DMD Vids" Binding="{Binding HaveDmdVids}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveDmdVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveDmdVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="RealDMD Image" Binding="{Binding HaveRealDmdImg}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveRealDmdImg, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveRealDmdImg, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="RealDMD Vids" Binding="{Binding HaveRealDmdVids}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveRealDmdVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveRealDmdVids, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>

                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="scanMedia" Content="Scan" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="56" Click="scanMedia_Click" Height="25"/>
                                <GridSplitter Margin="-3,2,0,0" HorizontalAlignment="Stretch" Grid.Row="1" Height="3" VerticalAlignment="Top" Grid.ColumnSpan="2"/>
                                <GridSplitter Grid.Row="1" VerticalAlignment="Stretch" Margin="0,5,12,0" Width="2"/>
                                <Image x:Name="image_wheel" Margin="10,10,0,0" Grid.Row="1" Grid.Column="1"/>
                                <MediaElement x:Name="media_view" RenderTransformOrigin="0.5,0.5" Margin="169,9,50,4" IsEnabled="True" Grid.Row="1" Grid.Column="1">
                                    <MediaElement.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform Y="0.494"/>
                                        </TransformGroup>
                                    </MediaElement.RenderTransform>
                                </MediaElement>

                                <DataGrid x:Name="datagrid_oddwheels" DataContext="{StaticResource ItemCollectionViewSourceWheelFiles}" ItemsSource="{Binding}" IsReadOnly="False"  AutoGenerateColumns="False" Margin="6,40,14,4" SelectionChanged="datagrid_oddwheels_SelectionChanged" Grid.Row="1">
                                    <DataGrid.Columns>

                                        <DataGridTextColumn Header="Unused Files" IsReadOnly="True" />
                                        <DataGridTextColumn Header="Name" Binding="{Binding File}" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Recommended" Binding="{Binding MatchedName}" IsReadOnly="True"/>
                                        <DataGridCheckBoxColumn Header="Rename" Binding="{Binding TagRename}" IsReadOnly="False"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="_wheels_Match" Content="Match" Click="MatchMedia_Click" Margin="0,10,105,0" HorizontalAlignment="Right" Width="49" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                                <TextBox x:Name="_wheels_matchValue" Height="23" Margin="0,9,78,0" TextWrapping="Wrap" Text="3" ToolTip="Matches less perfect the higher you go." VerticalAlignment="Top" HorizontalAlignment="Right" Width="22" Grid.Row="1"/>
                                <Button x:Name="_wheels_Rename" Content="Rename" ToolTip="Rename checked files to recommended" HorizontalAlignment="Right" Width="54" Click="MatchMediaRename_Click" Margin="0,10,19,0" Height="25" VerticalAlignment="Top" Grid.Row="1"/>
                                <Button x:Name="_wheels_Uncheck" Content="Uncheck" Margin="11,10,0,0" Height="25" VerticalAlignment="Top" HorizontalAlignment="Left" Width="64" ToolTip="Uncheck all selected" Click="MatchMediaUncheck_Click" Grid.Row="1"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Flyers">
                            <Grid Background="#FF25322C">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="38*"/>
                                    <RowDefinition Height="433*"/>
                                    <RowDefinition Height="143*"/>
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="DataGridFlyers" IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" Margin="0,5,-6,16" MouseUp="DataGridFlyers_MouseUp" Grid.Row="1" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                                        <DataGridTextColumn Header="Flyer Back" Binding="{Binding HaveFlyerBack}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveFlyerBack, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveFlyerBack, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Flyer Front" Binding="{Binding HaveFlyerFront}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveFlyerFront, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveFlyerFront, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside1" Binding="{Binding HaveInside1}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside1, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside1, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside2" Binding="{Binding HaveInside2}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside2, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside2, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside3" Binding="{Binding HaveInside3}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside3, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside3, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside4" Binding="{Binding HaveInside4}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside4, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside4, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside5" Binding="{Binding HaveInside5}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside5, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside5, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside6" Binding="{Binding HaveInside6}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside6, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside6, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside7" Binding="{Binding HaveInside7}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside7, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside7, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Inside8" Binding="{Binding HaveInside8}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInside8, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInside8, UpdateSourceTrigger=PropertyChanged}" 
                        						Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="scanFlyers" Content="Scan" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="56" Click="scanFlyers_Click" Height="25"/>
                                <GridSplitter HorizontalAlignment="Stretch" Grid.Row="2" Height="2" VerticalAlignment="Top"/>
                                <Image x:Name="image_flyers" Margin="213,10,197,0" Grid.Row="2"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Instructions">
                            <Grid Background="#FF25322C">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="189*"/>
                                    <RowDefinition Height="118*"/>
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="DataGridInstructions" CanUserAddRows="False" AutoGenerateColumns="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" Margin="0,43,-6,0" MouseUp="DataGridInstructions_MouseUp" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                                        <DataGridTextColumn Header="Card" Binding="{Binding HaveInstruction}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 1" Binding="{Binding HaveInstruction1}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction1, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction1, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 2" Binding="{Binding HaveInstruction2}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction2, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction2, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 3" Binding="{Binding HaveInstruction3}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction3, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction3, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 4" Binding="{Binding HaveInstruction4}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction4, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction4, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 5" Binding="{Binding HaveInstruction5}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction5, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction5, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Card 6" Binding="{Binding HaveInstruction6}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveInstruction6, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveInstruction6, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="scanCards" Content="Scan" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="56" Click="scanCards_Click" Height="25"/>
                                <GridSplitter HorizontalAlignment="Stretch" Height="2" VerticalAlignment="Top" Grid.Row="1" Margin="-3,0,3,0"/>
                                <Image x:Name="image_instructions" Margin="213,7,197,0" Grid.Row="1"/>
                                <WebBrowser x:Name="WebBrowserCards" Margin="368,10,365,10" Grid.Row="1"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="Videos">
                            <Grid Background="#FF25322C">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="379*"/>
                                    <RowDefinition Height="235*"/>
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="DataGridVideos" IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" Margin="0,43,-6,1" MouseUp="DataGridVideos_MouseUp" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                                        <DataGridTextColumn Header="Gameplay" Binding="{Binding HaveGameplayVid}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveGameplayVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveGameplayVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Tutorial" Binding="{Binding HaveTutVid}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveTutVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveTutVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn Header="Promotional" Binding="{Binding HavePromoVid}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HavePromoVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HavePromoVid, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button x:Name="scanVideos" Content="Scan" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="56" Click="scanVideos_Click" Height="25"/>
                                <GridSplitter Margin="-3,0,0,0" HorizontalAlignment="Stretch" Height="3" VerticalAlignment="Top" Grid.Row="1"/>
                                <MediaElement x:Name="media_view2" RenderTransformOrigin="0.5,0.5" Margin="283,4,306,6" IsEnabled="True" Grid.Row="1"/>
                            </Grid>
                        </TabItem>
                        <TabItem Header="DirectB2S">
                            <Grid Background="#FF25322C">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="379*"/>
                                    <RowDefinition Height="235*"/>
                                </Grid.RowDefinitions>
                                <DataGrid x:Name="DataGridB2s" IsReadOnly="True" CanUserAddRows="False" AutoGenerateColumns="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" Margin="0,43,-6,1" MouseUp="DataGridVideos_MouseUp" >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"/>
                                        <DataGridTextColumn Header="DirectB2S" Binding="{Binding HaveDirectB2S}">
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding HaveDirectB2S, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="True">
                                                            <Setter Property="Background" Value="#263DDE36"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding HaveDirectB2S, UpdateSourceTrigger=PropertyChanged}" 
                        									Value="False">
                                                            <Setter Property="Background" Value="#26FF5454"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTemplateColumn Header="...">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Content="..." Background="#26DC143C" Click="Button_Click_27"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <ListView x:Name="lvb2s" Visibility="Collapsed" Margin="0,43,0,0" MouseDoubleClick="lvb2s_MouseDoubleClick"></ListView>
                                <Button x:Name="scanDirectB2s" Content="Scan" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="56" Click="scanDirectB2s_Click" Height="25"/>
                                <GridSplitter Margin="-3,0,0,0" HorizontalAlignment="Stretch" Height="3" VerticalAlignment="Top" Grid.Row="1"/>
                                <CheckBox x:Name="FilterMissB2s" Content="Filter Missing B2S" HorizontalAlignment="Left" Margin="10,14,0,0" Grid.Row="1" VerticalAlignment="Top" Checked="CheckBox_Checked_1" Unchecked="CheckBox_Unchecked_1"/>
                                <DataGrid x:Name="datagridB2sRename"  CanUserAddRows="False" DataContext="{StaticResource ItemCollectionViewSource}" ItemsSource="{Binding}" HorizontalAlignment="Left" Margin="0,40,0,0" Grid.Row="1" Width="1046" AutoGenerateColumns="False">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Matched" Binding="{Binding HaveDirectB2S}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Recommended" Binding="{Binding MatchedB2SName}"></DataGridTextColumn>
                                        <DataGridTextColumn Header="Percent" Binding="{Binding MatchedPercent}"></DataGridTextColumn>
                                        <DataGridCheckBoxColumn Header="Rename" Binding="{Binding FlagRenameB2S}"></DataGridCheckBoxColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Button Content="Match" HorizontalAlignment="Left" Margin="74,10,0,0" VerticalAlignment="Top" Width="53" Click="Button_Click_9"/>
                                <Button Content="Rename" HorizontalAlignment="Left" Margin="200,11,0,0" Grid.Row="1" VerticalAlignment="Top" Width="53" Click="Button_Click_25"/>
                                <Button Content="Uncheck" HorizontalAlignment="Left" Margin="137,11,0,0" Grid.Row="1" VerticalAlignment="Top" Width="58" ToolTip="Uncheck selected for renaming" Click="Button_Click_26"/>
                                <Button x:Name="closeB2SList" Visibility="Collapsed" Content="X" Margin="0,51,10,0" VerticalAlignment="Top" HorizontalAlignment="Right" Width="34" Click="Button_Click_28"/>

                            </Grid>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem x:Name="tab3" Header="Settings">
                <Grid Background="#FF25322C">
                    <DataGrid x:Name="datagridSettings" ItemsSource="{Binding Pinxsystem}" CanUserAddRows="False" AutoGenerateColumns="False" Margin="0,50,0,373">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding Enabled}"></DataGridCheckBoxColumn>
                            <DataGridTextColumn Header="System" Binding="{Binding SysName}"></DataGridTextColumn>
                            <DataGridTextColumn Header="Path" Binding="{Binding WorkingPath}"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button x:Name="butt_WorkingPath" Content="..." Click="butt_WorkingPath_Click"></Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="TablePath"  Binding="{Binding TablePath}"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button  Content="..." Click="Button_Click_12" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Exe" Binding="{Binding Executable}"></DataGridTextColumn>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="..." Click="Button_Click_13"></Button>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="Params" Binding="{Binding Parameters}"></DataGridTextColumn>
                            <DataGridComboBoxColumn Header="Sys Type" ItemsSource="{Binding Source={StaticResource EnumDataProvider}}" SelectedValuePath="{Binding Type}"></DataGridComboBoxColumn>
                            <DataGridTextColumn Header="NVRam Path" Binding="{Binding NVRAMPATH}"></DataGridTextColumn>
                            <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding Enabled}"></DataGridCheckBoxColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <DataGrid x:Name="datagridSettings_Copy" ItemsSource="{Binding Pinxsystem}" AutoGenerateColumns="False" CanUserAddRows="False" Margin="0,291,0,0">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="System" Binding="{Binding SysName}"></DataGridTextColumn>
                            <DataGridCheckBoxColumn Header="LB On" Binding="{Binding LaunchBefore}"/>
                            <DataGridTextColumn Header="LB Path" Binding="{Binding LaunchBeforePath}"/>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="..." Click="Button_Click_14"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="LB Exe" Binding="{Binding LaunchBeforeexe}"/>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="..." Click="Button_Click_15"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="LB Params" Binding="{Binding LaunchBeforeParams}"/>
                            <DataGridCheckBoxColumn Header="LB Hide" Binding="{Binding LaunchBeforeHideWindow}"/>
                            <DataGridCheckBoxColumn Header="LB Wait" Binding="{Binding LaunchBeforeWaitForExit}"/>
                            <DataGridCheckBoxColumn Header="LA On" Binding="{Binding LaunchAfter}"/>
                            <DataGridTextColumn Header="LA Path" Binding="{Binding LaunchAfterWorkingPath}"/>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="..." Click="Button_Click_16"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridTextColumn Header="LA Exe" Binding="{Binding LaunchAfterexe}"/>
                            <DataGridTemplateColumn Header="">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Button Content="..." Click="Button_Click_17"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn Header="LA Hide" Binding="{Binding LaunchAfterHideWindow}"/>
                            <DataGridCheckBoxColumn Header="LA Wait" Binding="{Binding LaunchAfterWaitForExit}"/>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Button Content="Save" HorizontalAlignment="Left" Margin="73,10,0,0" Width="48" Height="25" VerticalAlignment="Top" Click="Button_Click_11"/>
                    <Button Content="Load Ini" HorizontalAlignment="Left" Margin="10,10,0,0" Width="58" Click="Button_Click_10" Height="25" VerticalAlignment="Top"/>
                    <Button Content="Kill" HorizontalAlignment="Left" Margin="277,10,0,0" Width="48" Height="25" VerticalAlignment="Top" Click="Button_Click_21"/>
                    <Button Content="Run" HorizontalAlignment="Left" Margin="224,10,0,0" Width="48" Height="25" VerticalAlignment="Top" Click="Button_Click_22"/>
                </Grid>
            </TabItem>
        </TabControl>

        <Button x:Name="buttonLoadDB" Content="Load DB" HorizontalAlignment="Left" Margin="585,0,0,4" Width="54" Click="Button_Click" Height="25" VerticalAlignment="Bottom"/>
        <Button x:Name="buttonSaveDB" Content="Save" HorizontalAlignment="Left" Margin="644,0,0,4" Width="48" Click="Button_Click_2" Height="25" VerticalAlignment="Bottom"/>
        <ComboBox x:Name="comboBox_xmllist" HorizontalAlignment="Left" Margin="366,0,0,3" Width="146" SelectionChanged="comboBox_xmllist_SelectionChanged" Height="26" VerticalAlignment="Bottom"/>
        <ComboBox x:Name="comboBox_syslist" HorizontalAlignment="Left" Width="120" SelectionChanged="comboBox_syslist_SelectionChanged" Margin="186,0,0,3" Height="26" VerticalAlignment="Bottom"/>
        <Button x:Name="buttonNewDB" Content="New DB" HorizontalAlignment="Left" Margin="524,0,0,4" Width="56" Click="Button_Click_3" Height="25" VerticalAlignment="Bottom"/>
        <TextBlock x:Name="db_text" HorizontalAlignment="Left" Margin="311,0,0,9" TextWrapping="Wrap" Text="Database" Width="50" Height="16" VerticalAlignment="Bottom"/>
        <Image x:Name="system_logo" Source="{Binding wheel_image}" Stretch="Fill" Margin="10,10,0,4" HorizontalAlignment="Left" Width="171" />
        <TextBox x:Name="filterText" Controls:TextBoxHelper.Watermark="Table Filter" Margin="697,0,0,4" Height="26" VerticalAlignment="Bottom" TextChanged="filterText_TextChanged" HorizontalAlignment="Left" Width="371" />


    </Grid>
</Controls:MetroWindow>
